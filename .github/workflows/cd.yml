name: CD # Continuous Deployment

permissions:
  # TODO: once `releases: write` is supported, use it instead.
  contents: write

on:
  release:
    types: [published]

jobs:
  upload-assets:
    name: ${{ matrix.target }}
    if: github.repository_owner == 'MarcoIeni'
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        # When updating this list, the reminder to update the target list in ci.yml.
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-22.04
          - target: aarch64-unknown-linux-musl
            os: ubuntu-22.04
          - target: aarch64-apple-darwin
            os: macos-11
          - target: aarch64-pc-windows-msvc
            os: windows-2019
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-22.04
          - target: x86_64-unknown-linux-musl
            os: ubuntu-22.04
          - target: x86_64-apple-darwin
            os: macos-11
          - target: x86_64-pc-windows-msvc
            os: windows-2019
          - target: x86_64-unknown-freebsd
            os: ubuntu-22.04
          - target: universal-apple-darwin
            os: macos-11
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
      - run: echo ${NAME}
        env:
          NAME: ${{ github.event.release.name }}
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: startsWith(matrix.os, 'ubuntu') && !contains(matrix.target, '-musl')
      - uses: taiki-e/install-action@cross
        if: contains(matrix.target, '-musl')
      - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >> "${GITHUB_ENV}"
        if: endsWith(matrix.target, 'windows-msvc')
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: marco-test-one
          target: ${{ matrix.target }}
          tar: all
          zip: windows
          token: ${{ secrets.GITHUB_TOKEN }}
